#!/usr/bin/env bash

set -e

function install_dmg {
  usage() {
    echo "usage:
      [--password|-p]
      [--url|-u]
      [--name|-n]
      [-h]"
  }

  while [ "$1" != "" ]; do
    case $1 in
      -n | --name ) shift
        name=$1
        ;;
      -p | --password ) shift
        password=$1
        ;;
      -u | --uri ) shift
        url=$1
        ;;
      -h | --help )
        usage
        exit
        ;;
      * )
        usage
        exit 0
    esac
    shift
  done

  if [ "$name" == "" ]; then
    echo "Pls pass --name or -n to the app which is downloaded from: $url"

    exit 1
  fi

  if [ -e "/Applications/${name}" ]; then
    echo "/Applications/${name} has already existed. Skip Installing!"

    return
  fi

  tempd=$(mktemp -d)

  wget $url -O $tempd/pkg.dmg
  if [[ $password != "" ]]; then
    listing=$(printf $password | hdiutil attach $tempd/pkg.dmg -stdinpass | grep Volumes)
  else
    listing=$(yes | hdiutil attach $tempd/pkg.dmg | grep Volumes)
  fi
  volume=$(echo "$listing" | cut -f 3)
  if [ -e "$volume"/*.app ]; then
    sudo cp -R "$volume"/*.app /Applications
  elif [ -e "$volume"/*.pkg ]; then
    package=$(ls -1 "$volume" | grep .pkg | head -1)
    sudo installer -pkg "$volume"/"$package" -target /Applications
  fi

  hdiutil detach "${volume}"
  rm -rf $tempd
}

# Pass sudo pw to the rest installation
install_dmg -n 'Google Drive.app' -u 'https://dl.google.com/drive-file-stream/GoogleDrive.dmg'

install_dmg -n 'Karabiner-Elements.app' -u 'https://github.com/pqrs-org/Karabiner-Elements/releases/download/v14.13.0/Karabiner-Elements-14.13.0.dmg' &
install_dmg -n 'Raycast.app' -u 'https://releases.raycast.com/download' &
install_dmg -n 'Caffeine.app' -u 'https://drive.soraliu.dev/0:/Software/Darwin/Caffeine/1.1.3/Caffeine.dmg' &
install_dmg -n 'Proxyman.app' -u 'https://github.com/ProxymanApp/Proxyman/releases/download/5.1.1/Proxyman_5.1.1.dmg' &
install_dmg -n 'Arc.app' -u 'https://releases.arc.net/release/Arc-latest.dmg' &
install_dmg -n 'Telegram.app' -u 'https://telegram.org/dl/desktop/mac' &
install_dmg -n 'Discord.app' -u 'https://discord.com/api/download?platform=osx' &
install_dmg -n '网易有道翻译.app' -u 'https://codown.youdao.com/cidian/download/MacDict.dmg' &
install_dmg -n 'KeyClu.app' -u 'https://github.com/Anze/KeyCluCask/releases/download/v0.25/KeyClu_v0.25.dmg' &

if $(uname -m | grep -q 'arm'); then
  install_dmg -n 'Docker.app' -u 'https://desktop.docker.com/mac/main/arm64/Docker.dmg?utm_source=docker&utm_medium=webreferral&utm_campaign=docs-driven-download-mac-arm64' &
  install_dmg -n 'Synergy.app' -u 'https://symless.com/synergy/synergy/api/download/synergy-macOS_arm64-v3.0.80.1-rc3.dmg' &
  install_dmg -n 'Todoist.app' -u 'https://todoist.com/mac_app?arch=arm' &
  install_dmg -n 'Wireshark.app' -u 'https://2.na.dl.wireshark.org/osx/Wireshark%204.2.6%20Arm%2064.dmg' &
elif $(uname -m | grep -q 'x86'); then
  install_dmg -n 'Docker.app' -u 'https://desktop.docker.com/mac/main/amd64/Docker.dmg?utm_source=docker&utm_medium=webreferral&utm_campaign=docs-driven-download-mac-amd64' &
  install_dmg -n 'Synergy.app' -u 'https://symless.com/synergy/synergy/api/download/synergy-macOS_x64-v3.0.80.1-rc3.dmg' &
  install_dmg -n 'Todoist.app' -u 'https://todoist.com/mac_app?arch=x64' &
  install_dmg -n 'Wireshark.app' -u 'https://2.na.dl.wireshark.org/osx/Wireshark%204.2.6%20Intel%2064.dmg' &
else
  echo "Error: Unknown arch $(uname -m)"
fi

wait
